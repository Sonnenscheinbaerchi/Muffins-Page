h2 Grid

p  Muffins enthält standardmäßig ein 12-Spalten responisve Grid, mit dem mobile First Ansatz. Das Grid kann sich an den Viewport oder an einer maximalen Breiten ausrichten. Das besondere am Grid des Muffin.Framework ist, dass du sowohl die Anzahl der Breakpoints als auch die Anzahl der Spalten und deren Abstände vollständig über Variablen definieren kannst. So kannst du dir einfach und schnell dein eigenes Grid erstellen.

h3 Variablen
h4 
  | grid-max-width
  p Die maximale Breite des grids kann in pixel, em oder auch Prozenten angegeben werden. 
  p = "default: 1440px"
h4 
  | space
  p Der Abstand zwischen den Spalten kann in pixel, em oder auch Prozente angegeben werden. 
  p = "default: 8px"
h4 
  | total-columns
  p Die Anzahl der Spalten ist variabel. Somit kannst du dein individuelles Grid aufbauen und es deinen Gegebenheiten vollständig anpassen. 
  p = "default: 12"
h4 
  | grid-breakpoints
  p 
    | Im Muffin-Framwork kannst du nicht nur die Anzahl der Breakpoints bestimmen, du kannst auchganz einfach die Klassennamen definieren. Du möchtest keine Einteilung in Größennamen sondern in Devicenamen? Kein Problem! 
    br
    | Gib einfach deinen Klassennamen, die min-width und die max-width an und schon kannst du dein eigenes Grid generieren.
  p = "default: ('xl', 1261px, null), ('lg', 961px, null), ('md', 641px, null), ('xl', 321px, null), ('xs', 220px, null)"

h3 Das Standard Grid
p Die Standard  Grid Klassen setzen sich aus dem Präfix "col", desKlassennamens und der Spaltenanzahl zusammen (dies werden durch "-" separiert), z.B. ".col-xs-6"
.highlight.row
  pre.col-xs-12
    code.html
      = '<div class="row">'
      br
      = '   <div class="col-xs-12">.col-xs-12</div>'
      br
      = '</div>'
  .example.col-xs-12
    .row
      .col-xs-12
        = '.col-xs-12'
.highlight.row
  pre.col-xs-12
    code.html
      = '<div class="row">'
      br
      = '   <div class="col-xs-1">.col-xs-1</div>'
      br
      = '   <div class="col-xs-11">.col-xs-11</div>'
      br
      = '</div>'
  .example.col-xs-12
    .row
      .col-xs-1
        = '.col-xs-1'
      .col-xs-11
        = '.col-xs-11'
.highlight.row
  pre.col-xs-12
    code.html
      = '<div class="row">'
      br
      = '   <div class="col-xs-2">.col-xs-2</div>'
      br
      = '   <div class="col-xs-10">.col-xs-10</div>'
      br
      = '</div>'
  .example.col-xs-12
    .row
      .col-xs-2
        = '.col-xs-2'
      .col-xs-10
        = '.col-xs-10'
.highlight.row
  pre.col-xs-12
    code.html
      = '<div class="row">'
      br
      = '   <div class="col-xs-3">.col-xs-3</div>'
      br
      = '   <div class="col-xs-9">.col-xs-9</div>'
      br
      = '</div>'
  .example.col-xs-12
    .row
      .col-xs-3
        = '.col-xs-3'
      .col-xs-9
        = '.col-xs-9'
.highlight.row
  pre.col-xs-12
    code.html
      = '<div class="row">'
      br
      = '   <div class="col-xs-4">.col-xs-4</div>'
      br
      = '   <div class="col-xs-8">.col-xs-8</div>'
      br
      = '</div>'
  .example.col-xs-12
    .row
      .col-xs-4
        = '.col-xs-4'
      .col-xs-8
        = '.col-xs-8'
.highlight.row
  pre.col-xs-12
    code.html
      = '<div class="row">'
      br
      = '   <div class="col-xs-5">.col-xs-5</div>'
      br
      = '   <div class="col-xs-7">.col-xs-7</div>'
      br
      = '</div>'
  .example.col-xs-12
    .row
      .col-xs-5
        = '.col-xs-5'
      .col-xs-7
        = '.col-xs-7'
.highlight.row
  pre.col-xs-12
    code.html
      = '<div class="row">'
      br
      = '   <div class="col-xs-6">.col-xs-6</div>'
      br
      = '   <div class="col-xs-6">.col-xs-6</div>'
      br
      = '</div>'
  .example.col-xs-12
    .row
      .col-xs-6
        = '.col-xs-6'
      .col-xs-6
        = '.col-xs-6'
.highlight.row
  pre.col-xs-12
    code.html
      = '<div class="row">'
      br
      = '   <div class="col-xs-7">.col-xs-7</div>'
      br
      = '   <div class="col-xs-5">.col-xs-5</div>'
      br
      = '</div>'
  .example.col-xs-12
    .row
      .col-xs-7
        = '.col-xs-7'
      .col-xs-5
        = '.col-xs-5'
.highlight.row
  pre.col-xs-12
    code.html
      = '<div class="row">'
      br
      = '   <div class="col-xs-8">.col-xs-8</div>'
      br
      = '   <div class="col-xs-4">.col-xs-4</div>'
      br
      = '</div>'
  .example.col-xs-12
    .row
      .col-xs-8
        = '.col-xs-8'
      .col-xs-4
        = '.col-xs-4'
.highlight.row
  pre.col-xs-12
    code.html
      = '<div class="row">'
      br
      = '   <div class="col-xs-9">.col-xs-9</div>'
      br
      = '   <div class="col-xs-3">.col-xs-3</div>'
      br
      = '</div>'
  .example.col-xs-12
    .row
      .col-xs-9
        = '.col-xs-9'
      .col-xs-3
        = '.col-xs-3'
.highlight.row
  pre.col-xs-12
    code.html
      = '<div class="row">'
      br
      = '   <div class="col-xs-10">.col-xs-10</div>'
      br
      = '   <div class="col-xs-2">.col-xs-2</div>'
      br
      = '</div>'
  .example.col-xs-12
    .row
      .col-xs-10
        = '.col-xs-10'
      .col-xs-2
        = '.col-xs-2'
.highlight.row
  pre.col-xs-12
    code.html
      = '<div class="row">'
      br
      = '   <div class="col-xs-11">.col-xs-11</div>'
      br
      = '   <div class="col-xs-1">.col-xs-1</div>'
      br
      = '</div>'
  .example.col-xs-12
    .row
      .col-xs-11
        = '.col-xs-11'
      .col-xs-1
        = '.col-xs-1'
h3 Nested Grid
p Alle Grid Klassen kannst du beliebig verschachteln. Hierfür musst du nur eine neue "row" anlegen.
.highlight.row
  pre.col-xs-12
    code.html
      = '<div class="row">'
      br
      = '   <div class="col-xs-11">'
      br
      = '      <div class="row">'
      br
      = '         <div class="col-xs-4">.col-xs-4</div>'
      br
      = '         <div class="col-xs-4">.col-xs-4</div>'
      br
      = '         <div class="col-xs-4">.col-xs-4</div>'
      br
      = '      </div>'
      br
      = '   </div>'
      br
      = '   <div class="col-xs-1">.col-xs-1</div>'
      br
      = '</div>'
  .example.col-xs-12
    .row
      .col-xs-10
        p = '.col-xs-10'
        .row
          .col-xs-4
            = 'col-xs-4'
          .col-xs-4
            = 'col-xs-4'
          .col-xs-4
            = 'col-xs-4'
      .col-xs-2
        = '.col-xs-2'
        .row
          .col-xs-6
            = 'col-xs-6'
          .col-xs-6
            = 'col-xs-6'
h3 Visibilty Classes
p Mit Visibilty CLasses kannst du Elemente abhängig der Bildschirmgröße und  Orientation und ein- und ausblenden.
h4 Bildschirmgrößen Detection
.highlight.row
  pre.col-xs-12
    code.html
      = '<div class="row">'
      br
      = '  <div class="col-xs-12 hide-md">.col-xs-12 .hide-md</div>'
      br
      = '  <div class="col-xs-12 hide-xs show-md">.col-xs-12 .hide-xs .show-md</div>'
      br
      = '</div>'
  .example.col-xs-12
    .row
      .col-xs-12.hide-md
        p = '.col-x-12 .hide-md'
      .col-xs-12.hide-xs.show-md
        p = '.col-xs-12 .hide-xs .show-md'
h4 Orientation Detection
.highlight.row
  pre.col-xs-12
    code.html
      = '<div class="row">'
      br
      = '  <div class="col-xs-12 hide-for-landscape">.col-xs-12 .hide-for-landscape (is portrait)</div>'
      br
      = '  <div class="col-xs-12 hide-for-portrait">.col-xs-12 .hide-for-portrait (is landscape)</div>'
      br
      = '</div>'
  .example.col-xs-12
    .row
      .col-xs-12.hide-md
        p = '.col-x-12 .hide-for-landscape (is portrait)'
      .col-xs-12.hide-xs.show-md
        p = '.col-xs-12 .hide-for-portrait (is landscape)'
